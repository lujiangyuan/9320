//
//	Paradigm LOCATE configuration file for a Paradigm C++ 16-bit embedded
// system application.  This general purpose configuration file can be
// used with a standalone target or with a PDREMOTE/ROM target.
//

//
// Select the options based on if we have a stand-alone target or if we will
// be connecting to a PDREMOTE/ROM target system.
//

cputype	Am186ES								// Select the target system processor

#if defined(__PDREMOTE__)

map	0x00000 to 0x00fff as reserved	// PDREMOTE/ROM and interrupt vector table
map	0x01000 to 0x0ffff as rdwr			// System RAM area (60KB RAM)
map	0x10000 to 0x1ffff as rdonly		// Simulated EPROM area (64KB RAM)
map	0x20000 to 0xfffff as reserved	// No access allowed

#define DATA_START		0x0100			// Start of application data
#define CODE_START		0x1000			// Start of application code
#define BOOT_START		0x1fc0			// Start of initialization code

#else

map	0x00000 to 0x1ffff as rdwr			// 128KB RAM address space
map	0x20000 to 0xeffff as reserved	// No access
map	0xf0000 to 0xfffff as rdonly		// 64KB EPROM address space

#define DATA_START		0x0040			// Start of application data
#define CODE_START		0xf000			// Start of application code
#define BOOT_START		0xffc0			// Start of initialization code

initcode	reset								\	// Reset vector to program entry point
			umcs = 0xf03c					\	// 64KB, 0 wait states, ignore ready
			lmcs = 0x1f3c						// 128KB, 0 wait states, ignore ready

class		??LOCATE = BOOT_START			// Chip select initialization
output	??LOCATE

hexfile	intel86								// Intel extended hex output

#endif


//
// Start of common configuration file settings.
//

absfile	axe86									// Paradigm C++ debugging output
listfile	segments								// Absolute segment map

dup		DATA ROMDATA						// Make a copy of initialized data
dup		FAR_DATA ROMFARDATA				// Make a copy of far initialized data

#if defined(__COMPFARDATA__)				// Compress and display results
compress	ROMFARDATA
display	compression
#endif

class		CODE = CODE_START					// Application code
class		DATA = DATA_START					// Application data

order		DATA								\	// RAM class organization
			BSS								\
			NVRAM								\
			EDATA								\
			STACK								\
			FAR_DATA ENDFAR_DATA			\
			FAR_BSS ENDFAR_BSS			\
			FAR_HEAP ENDFAR_HEAP

order		CODE								\	// EPROM class organization
			INITDATA EXITDATA				\
			FAR_CONST ENDFAR_CONST		\
			ROMDATA ENDROMDATA			\
			ROMFARDATA ENDROMFARDATA

output	CODE								\	// Classes in the output file(s)
			INITDATA EXITDATA				\
			FAR_CONST ENDFAR_CONST		\
			ROMDATA ENDROMDATA			\
			ROMFARDATA ENDROMFARDATA
